cmake_minimum_required(VERSION 3.1)
project(mp3_encoder)
set(sources src/thread_handler.cpp src/main.cpp src/wav.cpp)
set(headers src/logger.h src/thread_handler.h src/wav.h)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(sources ${sources} lame/lame.cmake )	
include(lame/lame.cmake)
if(MSVC)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest /W4")
        # Default debug flags are OK
        set(CMAKE_CXX_FLAGS_RELEASE "{CMAKE_CXX_FLAGS_RELEASE} /O2")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1z -Wall -Wextra")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} some other flags")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
    else()
        # nothing 
    endif()
endif()
if(WIN32)
    include(pthreads-win32/pthreads-win32.cmake)
    list(APPEND sources pthreads-win32/pthreads-win32.cmake)
    set(LIBS ${LIBS} LAME pthreads-win32)
    #include_directories(${CMAKE_SOURCE_DIR}/include/)
else()
    set(THREADS_PREFER_PTHREAD_FLAG ON)
    find_package(Threads REQUIRED)
    set(LIBS ${LIBS} LAME Threads::Threads stdc++fs)
    #include_directories(${CMAKE_SOURCE_DIR}/include/)
endif()
add_executable(${PROJECT_NAME} ${sources} ${headers} src/main.cpp)
target_link_libraries(${PROJECT_NAME} ${LIBS})
if(WIN32)
  get_property(pthreads-win32-location TARGET pthreads-win32 PROPERTY LOCATION)
  add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${pthreads-win32-location}" "$<TARGET_FILE_DIR:${PROJECT_NAME}>")
endif()
